<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|Win32">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|x64">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\src\liblzma\liblzma_w32res.rc">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">true</ExcludedFromBuild>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\src\common\tuklib_physmem.h" />
    <ClInclude Include="..\src\liblzma\check\check.h" />
    <ClInclude Include="..\src\liblzma\check\crc32_table_be.h" />
    <ClInclude Include="..\src\liblzma\check\crc32_table_le.h" />
    <ClInclude Include="..\src\liblzma\check\crc64_table_be.h" />
    <ClInclude Include="..\src\liblzma\check\crc64_table_le.h" />
    <ClInclude Include="..\src\liblzma\check\crc_macros.h" />
    <ClInclude Include="..\src\liblzma\common\alone_decoder.h" />
    <ClInclude Include="..\src\liblzma\common\block_decoder.h" />
    <ClInclude Include="..\src\liblzma\common\block_encoder.h" />
    <ClInclude Include="..\src\liblzma\common\common.h" />
    <ClInclude Include="..\src\liblzma\common\easy_preset.h" />
    <ClInclude Include="..\src\liblzma\common\filter_common.h" />
    <ClInclude Include="..\src\liblzma\common\filter_decoder.h" />
    <ClInclude Include="..\src\liblzma\common\filter_encoder.h" />
    <ClInclude Include="..\src\liblzma\common\index.h" />
    <ClInclude Include="..\src\liblzma\common\index_encoder.h" />
    <ClInclude Include="..\src\liblzma\common\stream_decoder.h" />
    <ClInclude Include="..\src\liblzma\common\stream_encoder.h" />
    <ClInclude Include="..\src\liblzma\common\stream_flags_common.h" />
    <ClInclude Include="..\src\liblzma\delta\delta_common.h" />
    <ClInclude Include="..\src\liblzma\delta\delta_decoder.h" />
    <ClInclude Include="..\src\liblzma\delta\delta_encoder.h" />
    <ClInclude Include="..\src\liblzma\delta\delta_private.h" />
    <ClInclude Include="..\src\liblzma\lzma\fastpos.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma2_decoder.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma2_encoder.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma_common.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma_decoder.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder.h" />
    <ClInclude Include="..\src\liblzma\lzma\lzma_encoder_private.h" />
    <ClInclude Include="..\src\liblzma\lz\lz_decoder.h" />
    <ClInclude Include="..\src\liblzma\lz\lz_encoder.h" />
    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash.h" />
    <ClInclude Include="..\src\liblzma\lz\lz_encoder_hash_table.h" />
    <ClInclude Include="..\src\liblzma\rangecoder\price.h" />
    <ClInclude Include="..\src\liblzma\rangecoder\range_common.h" />
    <ClInclude Include="..\src\liblzma\rangecoder\range_decoder.h" />
    <ClInclude Include="..\src\liblzma\rangecoder\range_encoder.h" />
    <ClInclude Include="..\src\liblzma\simple\simple_coder.h" />
    <ClInclude Include="..\src\liblzma\simple\simple_decoder.h" />
    <ClInclude Include="..\src\liblzma\simple\simple_encoder.h" />
    <ClInclude Include="..\src\liblzma\simple\simple_private.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="version.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\src\common\tuklib_physmem.c" />
    <ClCompile Include="..\src\liblzma\check\check.c" />
    <ClCompile Include="..\src\liblzma\check\crc32_fast.c" />
    <ClCompile Include="..\src\liblzma\check\crc32_table.c" />
    <ClCompile Include="..\src\liblzma\check\crc64_fast.c" />
    <ClCompile Include="..\src\liblzma\check\crc64_table.c" />
    <ClCompile Include="..\src\liblzma\check\sha256.c" />
    <ClCompile Include="..\src\liblzma\common\alone_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\alone_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\auto_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_buffer_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_buffer_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_header_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_header_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\block_util.c" />
    <ClCompile Include="..\src\liblzma\common\common.c" />
    <ClCompile Include="..\src\liblzma\common\easy_buffer_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\easy_decoder_memusage.c" />
    <ClCompile Include="..\src\liblzma\common\easy_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\easy_encoder_memusage.c" />
    <ClCompile Include="..\src\liblzma\common\easy_preset.c" />
    <ClCompile Include="..\src\liblzma\common\filter_buffer_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\filter_buffer_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\filter_common.c" />
    <ClCompile Include="..\src\liblzma\common\filter_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\filter_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\filter_flags_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\filter_flags_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\hardware_physmem.c" />
    <ClCompile Include="..\src\liblzma\common\index.c" />
    <ClCompile Include="..\src\liblzma\common\index_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\index_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\index_hash.c" />
    <ClCompile Include="..\src\liblzma\common\stream_buffer_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\stream_buffer_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\stream_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\stream_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\stream_flags_common.c" />
    <ClCompile Include="..\src\liblzma\common\stream_flags_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\stream_flags_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\vli_decoder.c" />
    <ClCompile Include="..\src\liblzma\common\vli_encoder.c" />
    <ClCompile Include="..\src\liblzma\common\vli_size.c" />
    <ClCompile Include="..\src\liblzma\delta\delta_common.c" />
    <ClCompile Include="..\src\liblzma\delta\delta_decoder.c" />
    <ClCompile Include="..\src\liblzma\delta\delta_encoder.c" />
    <ClCompile Include="..\src\liblzma\lzma\fastpos_table.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma2_decoder.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma2_encoder.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma_decoder.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
    <ClCompile Include="..\src\liblzma\lzma\lzma_encoder_presets.c" />
    <ClCompile Include="..\src\liblzma\lz\lz_decoder.c" />
    <ClCompile Include="..\src\liblzma\lz\lz_encoder.c" />
    <ClCompile Include="..\src\liblzma\lz\lz_encoder_mf.c" />
    <ClCompile Include="..\src\liblzma\rangecoder\price_table.c" />
    <ClCompile Include="..\src\liblzma\simple\arm.c" />
    <ClCompile Include="..\src\liblzma\simple\armthumb.c" />
    <ClCompile Include="..\src\liblzma\simple\ia64.c" />
    <ClCompile Include="..\src\liblzma\simple\powerpc.c" />
    <ClCompile Include="..\src\liblzma\simple\simple_coder.c" />
    <ClCompile Include="..\src\liblzma\simple\simple_decoder.c" />
    <ClCompile Include="..\src\liblzma\simple\simple_encoder.c" />
    <ClCompile Include="..\src\liblzma\simple\sparc.c" />
    <ClCompile Include="..\src\liblzma\simple\x86.c" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{85763F39-23DF-4C04-B7DF-7FBE3E7CF336}</ProjectGuid>
    <RootNamespace>liblzma</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v120</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>..\..\..\msvc32\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzmad</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzmad</TargetName>
    <OutDir>..\..\..\msvc64\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <OutDir>..\..\..\msvc32\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzmad</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzmad</TargetName>
    <OutDir>..\..\..\msvc64\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>..\..\..\msvc32\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <OutDir>..\..\..\msvc32\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
    <OutDir>..\..\..\msvc64\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
    <OutDir>..\..\..\msvc64\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <OutDir>..\..\..\msvc32\</OutDir>
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <IntDir>$(SolutionDir)\obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <TargetName>liblzma</TargetName>
    <OutDir>..\..\..\msvc64\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;DLL_EXPORT;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\bin\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\bin\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(OutDir)\bin\$(TargetName).pgd</ProfileGuidedDatabase>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;DLL_EXPORT;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\bin\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\bin\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(OutDir)\bin\$(TargetName).pgd</ProfileGuidedDatabase>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;DLL_EXPORT;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\bin\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\bin\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(OutDir)\bin\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <FloatingPointModel>Fast</FloatingPointModel>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <PreprocessorDefinitions>HAVE_CONFIG_H;TUKLIB_SYMBOL_PREFIX=lzma_;inline=_inline;restrict=__restrict;DLL_EXPORT;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>.\;..\src\liblzma\api;..\src\liblzma\common;..\src\liblzma\check;..\src\liblzma\lz;..\src\liblzma\rangecoder;..\src\liblzma\lzma;..\src\liblzma\delta;..\src\liblzma\simple;..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>false</ExceptionHandling>
      <DisableSpecificWarnings>4996;4244;4028;4267</DisableSpecificWarnings>
      <C99Support>true</C99Support>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)\bin\$(TargetName).pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <ImportLibrary>$(OutDir)\bin\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(OutDir)\bin\$(TargetName).pgd</ProfileGuidedDatabase>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
    </Link>
    <PostBuildEvent>
      <Command>mkdir $(OutDir)\include
copy ..\src\liblzma\api\lzma.h $(OutDir)\include
mkdir $(OutDir)\include\lzma
copy ..\src\liblzma\api\lzma\*.h $(OutDir)\include\lzma
mkdir $(OutDir)\licenses
copy ..\COPYING.LGPLv2.1 $(OutDir)\licenses\liblzma.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist ..\config.h (
del ..\config.h
)
if exist $(OutDir)\include\lzma (
rd /s /q $(OutDir)\include\lzma
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\src\common;..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>